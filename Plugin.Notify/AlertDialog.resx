<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilIcons.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>252, 17</value>
  </metadata>
  <data name="ilIcons.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADO
        CQAAAk1TRnQBSQFMAgEBAgEAAVABAAFQAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDBIAAdYB1QHUAdsC2gHRAdABzgHPAc4BzAHOAc0BywHMAcsBygHMAcsBygHM
        AcsBygHMAcsBygHMAcsBygHNAcwBygHMAcsBygHPAc4BzAHRAdABzgHaAtkB1gHVAdQB1gHVAdQC2AHi
        AssB3ALJAdsCyQHaAscB2ALHAdgCxwHYAscB2ALHAdgCyAHZAscB2ALJAdsCywHcAtYB4gHWAtVgAAPn
        AYgBgwF9AWABWAFPAWABWAFPAWABWAFPAWABWAFPAWABWAFPAWABWAFPAWABWAFPAWABWAFPAWABWAFP
        AWABWAFPAWABWAFPAWABWAFPAYMBfQF3AdwC2wPnAmoBzQIzAcMCMwHDAjMBwwIzAcMCMwHDAjMBwwIz
        AcMCMwHDAjMBwwIzAcMCMwHDAjMBwwJiAcsC2AHjYAAD5gFjAVsBUwFiAVkBUQFiAVkBUQFiAVkBUQFi
        AVkBUQFiAVkBUQFiAVkBUQFiAVkBUQFiAVkBUQFiAVkBUQFiAVkBUQFiAVkBUQFiAVkBUQFjAVsBUgHV
        AdQB0wPmAjcBxgI1AcYCNQHGAjUBxgI1AcYCNQHGAjUBxgI1AcYCNQHGAjUBxgI1AcYCNQHGAjUBxgI2
        AcYCzwHhYAAD5QFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFk
        AVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwFkAVsBUwHUAdMB0gPlAjkBygI5AcoCOQHKAjkBygI5
        AcoCOQHKAjkBygI5AcoCOQHKAjkBygI5AcoCOQHKAjkBygI5AcoCzwHhYAAD5AFmAV0BVAFmAV0BVAFm
        AV0BVAFkAVwBUwFiAVoBUQFjAVoBUQFmAV0BVAFmAV0BVAFjAVoBUQFiAVoBUQFkAVsBUgFmAV0BVAFm
        AV0BVAFmAV0BVAHUAdMB0gPkAj4BzwI+Ac8CPgHPAj0BywI7AcUCPAHFAj4BzgI+Ac8CPAHGAjsBxAI8
        AcoCPgHPAj4BzwI+A88B4WAAA+QBaQFgAVcBaQFgAVcBaQFgAVcBjQGFAX8BvAG4ArQBrwGsAW4BZQFd
        AWQBWwFTAbEBrQGpAb8BugG3AZUBjwGJAWkBYAFXAWkBYAFXAWkBYAFXAdUB1AHSA+QCQgHUAkIB1AJC
        AdQCcAHdAqwB5wKiAeQCTAHMAkAByQKfAeICrwHoAnsB3wJCAdQCQgHUAkIB1ALQAeJgAAPkAWsBYgFZ
        AWsBYgFZAWsBYgFZAXEBaAFgAa8BqgGlAeAB3QHcAcQBvwG9Ab8BugG4AeIB4AHeAboBtQGyAXIBagFh
        AWsBYgFZAWsBYgFZAWsBYgFZAdUB1AHTA+QCRwHZAkcB2QJHAdkCTgHbApsB6gLXAfYCtgHrArAB6QLa
        AfcCqQHtAlAB3AJHAdkCRwHZAkcB2QLQAeNgAAPkAW4BZQFbAW4BZQFbAW4BZQFbAW4BZQFbAW4BZQFb
        AZwBlgGPAeUB4wHhAe0B7AHqAaMBngGXAW4BZQFbAW4BZQFbAW4BZQFbAW4BZQFbAW4BZQFbAdUB1AHT
        A+QCSwHfAksB3wJLAd8CSwHfAksB3wGFAYQB5gLeAfkC6AH7Ao4B5wJLAd8CSwHfAksB3wJLAd8CSwHf
        AtEB42AAA+QBcAFnAV0BcAFnAV0BcAFnAV0BcAFnAV0BdQFsAWMBpgGiAZwB6AHmAeUB7wHuAe0BrwGq
        AaYBdQFuAWUBcAFnAV0BcAFnAV0BcAFnAV0BcAFnAV0B1gHUAdMD5AJQAeUCUAHlAlAB5QJPAeQCVwHc
        AZUBlAHlAuIB+QLrAfwBnwGeAecCWQHbAk8B4wJQAeUCUAHlAlAB5QLRAeRgAAPjAXQBagFgAXQBagFg
        AXQBagFgAX4BdQFsAcABuwG3AewB6gHpAccBwwG+AcEBvAG3Ae4B7AHrAcoBxwHEAYEBeAFvAXQBagFg
        AXQBagFgAXQBagFgAdYB1QHTA+MCVAHqAlQB6gJUAeoCYgHmArIB8ALoAfwCugH4ArMB9wLqAf0CwAHy
        AWYBZQHlAlQB6gJUAeoCVAHqAtIB5WAAA+QBdgFsAWIBdgFsAWIBdgFsAWIBlgGOAYcBwQG8AbgBuwG2
        AbEBfgF1AWsBdgFsAWIBuQGzAa4BwwG/AbsBngGXAZABdgFsAWIBdgFsAWIBdgFsAWIB1gHVAdQD5AJZ
        AfACWQHwAlkB8AKAAfQCtAH5AqwB+AJjAfECWQHwAqkB+AK3AfkCiQH1AlkB8AJZAfACWQHwAtMB5mAA
        A+UBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFu
        AWQBeAFuAWQBeAFuAWQBeAFuAWQBeAFuAWQB2AHXAdYD5QJdAfQCXQH0Al0B9AJdAfQCXQH0Al0B9AJd
        AfQCXQH0Al0B9AJdAfQCXQH0Al0B9AJdAfQCXQH0AtUB6GAAA+YBegFwAWUBegFwAWUBegFwAWUBegFw
        AWUBegFwAWUBegFwAWUBegFwAWUBegFwAWUBegFwAWUBegFwAWUBegFwAWUBegFwAWUBegFwAWUBegFw
        AWUB2QHYAdcD5gJgAfkCYAH5AmAB+QJgAfkCYAH5AmAB+QJgAfkCYAH5AmAB+QJgAfkCYAH5AmAB+QJg
        AfkCYAH5AtYB6WAAA+gBfQFzAWgBfAFxAWcBfAFxAWcBfAFxAWcBfAFxAWcBfAFxAWcBfAFxAWcBfAFx
        AWcBfAFxAWcBfAFxAWcBfAFxAWcBfAFxAWcBfAFxAWcBfQFzAWgB3AHaAdkD6AJmAfwCYwH8AmMB/AJj
        AfwCYwH8AmMB/AJjAfwCYwH8AmMB/AJjAfwCYwH8AmMB/AJjAfwCZQH8AtgB62AAA+wBpQGeAZcBfQFz
        AWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFzAWgBfQFz
        AWgBfQFzAWgBnwGYAZEB5AHjAeED7AKWAfYCZgH/AmYB/wJmAf8CZgH/AmYB/wJmAf8CZgH/AmYB/wJm
        Af8CZgH/AmYB/wJmAf8CjwH4AuIB7GAAAeUC5AHtAuwC6wTqG+kD6gLtAewB6ALnAeUC5AHtAuwC6wTq
        G+kD6gLtAewB6ALnYAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/4EACw==
</value>
  </data>
  <metadata name="opacityTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="moveTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>139, 17</value>
  </metadata>
</root>